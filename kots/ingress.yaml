apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: replicateed-validation-ingress
  annotations:
    kots.io/exclude: '{{repl or (ConfigOptionEquals "service_type" "ingress" | not) IsKurl }}'
    kubernetes.io/ingress.allow-http: '{{repl ConfigOptionEquals "allow_http" "1" }}'
    nginx.ingress.kubernetes.io/force-ssl-redirect: '{{repl ConfigOptionEquals "allow_http" "1" | not }}'
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "annotations" | nindent 4 }}
spec:
  rules:
    - host: repl{{ or (ConfigOption "ingress_hostname") "~" }}
      http:
        paths:
          - path: /
            backend:
              serviceName: nginx
              servicePort: 3000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: replicated-validation-ingress
  annotations:
    kots.io/exclude: '{{repl or (ConfigOptionEquals "service_type" "ingress" | not) (not IsKurl) }}'
    kubernetes.io/ingress.allow-http: '{{repl ConfigOptionEquals "allow_http" "1" }}'
    nginx.ingress.kubernetes.io/force-ssl-redirect: '{{repl ConfigOptionEquals "allow_http" "1" | not }}'
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "annotations" | nindent 4 }}
spec:
  tls:
    - hosts:
        - repl{{ ConfigOption "ingress_hostname" }}
      secretName: kotsadm-tls
  rules:
    - host: repl{{ ConfigOption "ingress_hostname" }}
      http:
        paths:
          - path: /
            backend:
              serviceName: nginx
              servicePort: 3000
